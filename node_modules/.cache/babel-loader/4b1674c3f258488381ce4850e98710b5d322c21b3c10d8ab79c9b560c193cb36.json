{"ast":null,"code":"'use strict';\n\nfunction _process(v, mod) {\n  var i;\n  var r;\n  if (typeof mod === 'function') {\n    r = mod(v);\n    if (r !== undefined) {\n      v = r;\n    }\n  } else if (Array.isArray(mod)) {\n    for (i = 0; i < mod.length; i++) {\n      r = mod[i](v);\n      if (r !== undefined) {\n        v = r;\n      }\n    }\n  }\n  return v;\n}\nfunction parseKey(key, val) {\n  // detect negative index notation\n  if (key[0] === '-' && Array.isArray(val) && /^-\\d+$/.test(key)) {\n    return val.length + parseInt(key, 10);\n  }\n  return key;\n}\nfunction isIndex(k) {\n  return /^\\d+$/.test(k);\n}\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\nfunction isArrayOrObject(val) {\n  return Object(val) === val;\n}\nfunction isEmptyObject(val) {\n  return Object.keys(val).length === 0;\n}\nvar blacklist = ['__proto__', 'prototype', 'constructor'];\nvar blacklistFilter = function (part) {\n  return blacklist.indexOf(part) === -1;\n};\nfunction parsePath(path, sep) {\n  if (path.indexOf('[') >= 0) {\n    path = path.replace(/\\[/g, sep).replace(/]/g, '');\n  }\n  var parts = path.split(sep);\n  var check = parts.filter(blacklistFilter);\n  if (check.length !== parts.length) {\n    throw Error('Refusing to update blacklisted property ' + path);\n  }\n  return parts;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction DotObject(separator, override, useArray, useBrackets) {\n  if (!(this instanceof DotObject)) {\n    return new DotObject(separator, override, useArray, useBrackets);\n  }\n  if (typeof override === 'undefined') override = false;\n  if (typeof useArray === 'undefined') useArray = true;\n  if (typeof useBrackets === 'undefined') useBrackets = true;\n  this.separator = separator || '.';\n  this.override = override;\n  this.useArray = useArray;\n  this.useBrackets = useBrackets;\n  this.keepArray = false;\n\n  // contains touched arrays\n  this.cleanup = [];\n}\nvar dotDefault = new DotObject('.', false, true, true);\nfunction wrap(method) {\n  return function () {\n    return dotDefault[method].apply(dotDefault, arguments);\n  };\n}\nDotObject.prototype._fill = function (a, obj, v, mod) {\n  var k = a.shift();\n  if (a.length > 0) {\n    obj[k] = obj[k] || (this.useArray && isIndex(a[0]) ? [] : {});\n    if (!isArrayOrObject(obj[k])) {\n      if (this.override) {\n        obj[k] = {};\n      } else {\n        if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n          throw new Error('Trying to redefine `' + k + '` which is a ' + typeof obj[k]);\n        }\n        return;\n      }\n    }\n    this._fill(a, obj[k], v, mod);\n  } else {\n    if (!this.override && isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n      if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n        throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\");\n      }\n      return;\n    }\n    obj[k] = _process(v, mod);\n  }\n};\n\n/**\n *\n * Converts an object with dotted-key/value pairs to it's expanded version\n *\n * Optionally transformed by a set of modifiers.\n *\n * Usage:\n *\n *   var row = {\n *     'nr': 200,\n *     'doc.name': '  My Document  '\n *   }\n *\n *   var mods = {\n *     'doc.name': [_s.trim, _s.underscored]\n *   }\n *\n *   dot.object(row, mods)\n *\n * @param {Object} obj\n * @param {Object} mods\n */\nDotObject.prototype.object = function (obj, mods) {\n  var self = this;\n  Object.keys(obj).forEach(function (k) {\n    var mod = mods === undefined ? null : mods[k];\n    // normalize array notation.\n    var ok = parsePath(k, self.separator).join(self.separator);\n    if (ok.indexOf(self.separator) !== -1) {\n      self._fill(ok.split(self.separator), obj, obj[k], mod);\n      delete obj[k];\n    } else {\n      obj[k] = _process(obj[k], mod);\n    }\n  });\n  return obj;\n};\n\n/**\n * @param {String} path dotted path\n * @param {String} v value to be set\n * @param {Object} obj object to be modified\n * @param {Function|Array} mod optional modifier\n */\nDotObject.prototype.str = function (path, v, obj, mod) {\n  var ok = parsePath(path, this.separator).join(this.separator);\n  if (path.indexOf(this.separator) !== -1) {\n    this._fill(ok.split(this.separator), obj, v, mod);\n  } else {\n    obj[path] = _process(v, mod);\n  }\n  return obj;\n};\n\n/**\n *\n * Pick a value from an object using dot notation.\n *\n * Optionally remove the value\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Boolean} remove\n */\nDotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n  var i;\n  var keys;\n  var val;\n  var key;\n  var cp;\n  keys = parsePath(path, this.separator);\n  for (i = 0; i < keys.length; i++) {\n    key = parseKey(keys[i], obj);\n    if (obj && typeof obj === 'object' && key in obj) {\n      if (i === keys.length - 1) {\n        if (remove) {\n          val = obj[key];\n          if (reindexArray && Array.isArray(obj)) {\n            obj.splice(key, 1);\n          } else {\n            delete obj[key];\n          }\n          if (Array.isArray(obj)) {\n            cp = keys.slice(0, -1).join('.');\n            if (this.cleanup.indexOf(cp) === -1) {\n              this.cleanup.push(cp);\n            }\n          }\n          return val;\n        } else {\n          return obj[key];\n        }\n      } else {\n        obj = obj[key];\n      }\n    } else {\n      return undefined;\n    }\n  }\n  if (remove && Array.isArray(obj)) {\n    obj = obj.filter(function (n) {\n      return n !== undefined;\n    });\n  }\n  return obj;\n};\n/**\n *\n * Delete value from an object using dot notation.\n *\n * @param {String} path\n * @param {Object} obj\n * @return {any} The removed value\n */\nDotObject.prototype.delete = function (path, obj) {\n  return this.remove(path, obj, true);\n};\n\n/**\n *\n * Remove value from an object using dot notation.\n *\n * Will remove multiple items if path is an array.\n * In this case array indexes will be retained until all\n * removals have been processed.\n *\n * Use dot.delete() to automatically  re-index arrays.\n *\n * @param {String|Array<String>} path\n * @param {Object} obj\n * @param {Boolean} reindexArray\n * @return {any} The removed value\n */\nDotObject.prototype.remove = function (path, obj, reindexArray) {\n  var i;\n  this.cleanup = [];\n  if (Array.isArray(path)) {\n    for (i = 0; i < path.length; i++) {\n      this.pick(path[i], obj, true, reindexArray);\n    }\n    if (!reindexArray) {\n      this._cleanup(obj);\n    }\n    return obj;\n  } else {\n    return this.pick(path, obj, true, reindexArray);\n  }\n};\nDotObject.prototype._cleanup = function (obj) {\n  var ret;\n  var i;\n  var keys;\n  var root;\n  if (this.cleanup.length) {\n    for (i = 0; i < this.cleanup.length; i++) {\n      keys = this.cleanup[i].split('.');\n      root = keys.splice(0, -1).join('.');\n      ret = root ? this.pick(root, obj) : obj;\n      ret = ret[keys[0]].filter(function (v) {\n        return v !== undefined;\n      });\n      this.set(this.cleanup[i], ret, obj);\n    }\n    this.cleanup = [];\n  }\n};\n\n/**\n * Alias method  for `dot.remove`\n *\n * Note: this is not an alias for dot.delete()\n *\n * @param {String|Array<String>} path\n * @param {Object} obj\n * @param {Boolean} reindexArray\n * @return {any} The removed value\n */\nDotObject.prototype.del = DotObject.prototype.remove;\n\n/**\n *\n * Move a property from one place to the other.\n *\n * If the source path does not exist (undefined)\n * the target property will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.move = function (source, target, obj, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(this.pick(source, obj, true), mods), obj, merge);\n  } else {\n    merge = mods;\n    this.set(target, this.pick(source, obj, true), obj, merge);\n  }\n  return obj;\n};\n\n/**\n *\n * Transfer a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.transfer = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(this.pick(source, obj1, true), mods), obj2, merge);\n  } else {\n    merge = mods;\n    this.set(target, this.pick(source, obj1, true), obj2, merge);\n  }\n  return obj2;\n};\n\n/**\n *\n * Copy a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(\n    // clone what is picked\n    JSON.parse(JSON.stringify(this.pick(source, obj1, false))), mods), obj2, merge);\n  } else {\n    merge = mods;\n    this.set(target, this.pick(source, obj1, false), obj2, merge);\n  }\n  return obj2;\n};\n\n/**\n *\n * Set a property on an object using dot notation.\n *\n * @param {String} path\n * @param {any} val\n * @param {Object} obj\n * @param {Boolean} merge\n */\nDotObject.prototype.set = function (path, val, obj, merge) {\n  var i;\n  var k;\n  var keys;\n  var key;\n\n  // Do not operate if the value is undefined.\n  if (typeof val === 'undefined') {\n    return obj;\n  }\n  keys = parsePath(path, this.separator);\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    if (i === keys.length - 1) {\n      if (merge && isObject(val) && isObject(obj[key])) {\n        for (k in val) {\n          if (hasOwnProperty.call(val, k)) {\n            obj[key][k] = val[k];\n          }\n        }\n      } else if (merge && Array.isArray(obj[key]) && Array.isArray(val)) {\n        for (var j = 0; j < val.length; j++) {\n          obj[keys[i]].push(val[j]);\n        }\n      } else {\n        obj[key] = val;\n      }\n    } else if (\n    // force the value to be an object\n    !hasOwnProperty.call(obj, key) || !isObject(obj[key]) && !Array.isArray(obj[key])) {\n      // initialize as array if next key is numeric\n      if (/^\\d+$/.test(keys[i + 1])) {\n        obj[key] = [];\n      } else {\n        obj[key] = {};\n      }\n    }\n    obj = obj[key];\n  }\n  return obj;\n};\n\n/**\n *\n * Transform an object\n *\n * Usage:\n *\n *   var obj = {\n *     \"id\": 1,\n *    \"some\": {\n *      \"thing\": \"else\"\n *    }\n *   }\n *\n *   var transform = {\n *     \"id\": \"nr\",\n *    \"some.thing\": \"name\"\n *   }\n *\n *   var tgt = dot.transform(transform, obj)\n *\n * @param {Object} recipe Transform recipe\n * @param {Object} obj Object to be transformed\n * @param {Array} mods modifiers for the target\n */\nDotObject.prototype.transform = function (recipe, obj, tgt) {\n  obj = obj || {};\n  tgt = tgt || {};\n  Object.keys(recipe).forEach(function (key) {\n    this.set(recipe[key], this.pick(key, obj), tgt);\n  }.bind(this));\n  return tgt;\n};\n\n/**\n *\n * Convert object to dotted-key/value pair\n *\n * Usage:\n *\n *   var tgt = dot.dot(obj)\n *\n *   or\n *\n *   var tgt = {}\n *   dot.dot(obj, tgt)\n *\n * @param {Object} obj source object\n * @param {Object} tgt target object\n * @param {Array} path path array (internal)\n */\nDotObject.prototype.dot = function (obj, tgt, path) {\n  tgt = tgt || {};\n  path = path || [];\n  var isArray = Array.isArray(obj);\n  Object.keys(obj).forEach(function (key) {\n    var index = isArray && this.useBrackets ? '[' + key + ']' : key;\n    if (isArrayOrObject(obj[key]) && (isObject(obj[key]) && !isEmptyObject(obj[key]) || Array.isArray(obj[key]) && !this.keepArray && obj[key].length !== 0)) {\n      if (isArray && this.useBrackets) {\n        var previousKey = path[path.length - 1] || '';\n        return this.dot(obj[key], tgt, path.slice(0, -1).concat(previousKey + index));\n      } else {\n        return this.dot(obj[key], tgt, path.concat(index));\n      }\n    } else {\n      if (isArray && this.useBrackets) {\n        tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key];\n      } else {\n        tgt[path.concat(index).join(this.separator)] = obj[key];\n      }\n    }\n  }.bind(this));\n  return tgt;\n};\nDotObject.pick = wrap('pick');\nDotObject.move = wrap('move');\nDotObject.transfer = wrap('transfer');\nDotObject.transform = wrap('transform');\nDotObject.copy = wrap('copy');\nDotObject.object = wrap('object');\nDotObject.str = wrap('str');\nDotObject.set = wrap('set');\nDotObject.delete = wrap('delete');\nDotObject.del = DotObject.remove = wrap('remove');\nDotObject.dot = wrap('dot');\n['override', 'overwrite'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault.override;\n    },\n    set: function (val) {\n      dotDefault.override = !!val;\n    }\n  });\n});\n['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault[prop];\n    },\n    set: function (val) {\n      dotDefault[prop] = val;\n    }\n  });\n});\nDotObject._process = _process;\nmodule.exports = DotObject;","map":{"version":3,"names":["_process","v","mod","i","r","undefined","Array","isArray","length","parseKey","key","val","test","parseInt","isIndex","k","isObject","Object","prototype","toString","call","isArrayOrObject","isEmptyObject","keys","blacklist","blacklistFilter","part","indexOf","parsePath","path","sep","replace","parts","split","check","filter","Error","hasOwnProperty","DotObject","separator","override","useArray","useBrackets","keepArray","cleanup","dotDefault","wrap","method","apply","arguments","_fill","a","obj","shift","object","mods","self","forEach","ok","join","str","pick","remove","reindexArray","cp","splice","slice","push","n","delete","_cleanup","ret","root","set","del","move","source","target","merge","transfer","obj1","obj2","copy","JSON","parse","stringify","j","transform","recipe","tgt","bind","dot","index","previousKey","concat","prop","defineProperty","get","module","exports"],"sources":["C:/Users/godoi/OneDrive/Documents/projetos-front-end/new_fe_hp_game/node_modules/dot-object/index.js"],"sourcesContent":["'use strict'\n\nfunction _process (v, mod) {\n  var i\n  var r\n\n  if (typeof mod === 'function') {\n    r = mod(v)\n    if (r !== undefined) {\n      v = r\n    }\n  } else if (Array.isArray(mod)) {\n    for (i = 0; i < mod.length; i++) {\n      r = mod[i](v)\n      if (r !== undefined) {\n        v = r\n      }\n    }\n  }\n\n  return v\n}\n\nfunction parseKey (key, val) {\n  // detect negative index notation\n  if (key[0] === '-' && Array.isArray(val) && /^-\\d+$/.test(key)) {\n    return val.length + parseInt(key, 10)\n  }\n  return key\n}\n\nfunction isIndex (k) {\n  return /^\\d+$/.test(k)\n}\n\nfunction isObject (val) {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nfunction isArrayOrObject (val) {\n  return Object(val) === val\n}\n\nfunction isEmptyObject (val) {\n  return Object.keys(val).length === 0\n}\n\nvar blacklist = ['__proto__', 'prototype', 'constructor']\nvar blacklistFilter = function (part) { return blacklist.indexOf(part) === -1 }\n\nfunction parsePath (path, sep) {\n  if (path.indexOf('[') >= 0) {\n    path = path.replace(/\\[/g, sep).replace(/]/g, '')\n  }\n\n  var parts = path.split(sep)\n\n  var check = parts.filter(blacklistFilter)\n\n  if (check.length !== parts.length) {\n    throw Error('Refusing to update blacklisted property ' + path)\n  }\n\n  return parts\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction DotObject (separator, override, useArray, useBrackets) {\n  if (!(this instanceof DotObject)) {\n    return new DotObject(separator, override, useArray, useBrackets)\n  }\n\n  if (typeof override === 'undefined') override = false\n  if (typeof useArray === 'undefined') useArray = true\n  if (typeof useBrackets === 'undefined') useBrackets = true\n  this.separator = separator || '.'\n  this.override = override\n  this.useArray = useArray\n  this.useBrackets = useBrackets\n  this.keepArray = false\n\n  // contains touched arrays\n  this.cleanup = []\n}\n\nvar dotDefault = new DotObject('.', false, true, true)\nfunction wrap (method) {\n  return function () {\n    return dotDefault[method].apply(dotDefault, arguments)\n  }\n}\n\nDotObject.prototype._fill = function (a, obj, v, mod) {\n  var k = a.shift()\n\n  if (a.length > 0) {\n    obj[k] = obj[k] || (this.useArray && isIndex(a[0]) ? [] : {})\n\n    if (!isArrayOrObject(obj[k])) {\n      if (this.override) {\n        obj[k] = {}\n      } else {\n        if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n          throw new Error(\n            'Trying to redefine `' + k + '` which is a ' + typeof obj[k]\n          )\n        }\n\n        return\n      }\n    }\n\n    this._fill(a, obj[k], v, mod)\n  } else {\n    if (!this.override && isArrayOrObject(obj[k]) && !isEmptyObject(obj[k])) {\n      if (!(isArrayOrObject(v) && isEmptyObject(v))) {\n        throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\")\n      }\n\n      return\n    }\n\n    obj[k] = _process(v, mod)\n  }\n}\n\n/**\n *\n * Converts an object with dotted-key/value pairs to it's expanded version\n *\n * Optionally transformed by a set of modifiers.\n *\n * Usage:\n *\n *   var row = {\n *     'nr': 200,\n *     'doc.name': '  My Document  '\n *   }\n *\n *   var mods = {\n *     'doc.name': [_s.trim, _s.underscored]\n *   }\n *\n *   dot.object(row, mods)\n *\n * @param {Object} obj\n * @param {Object} mods\n */\nDotObject.prototype.object = function (obj, mods) {\n  var self = this\n\n  Object.keys(obj).forEach(function (k) {\n    var mod = mods === undefined ? null : mods[k]\n    // normalize array notation.\n    var ok = parsePath(k, self.separator).join(self.separator)\n\n    if (ok.indexOf(self.separator) !== -1) {\n      self._fill(ok.split(self.separator), obj, obj[k], mod)\n      delete obj[k]\n    } else {\n      obj[k] = _process(obj[k], mod)\n    }\n  })\n\n  return obj\n}\n\n/**\n * @param {String} path dotted path\n * @param {String} v value to be set\n * @param {Object} obj object to be modified\n * @param {Function|Array} mod optional modifier\n */\nDotObject.prototype.str = function (path, v, obj, mod) {\n  var ok = parsePath(path, this.separator).join(this.separator)\n\n  if (path.indexOf(this.separator) !== -1) {\n    this._fill(ok.split(this.separator), obj, v, mod)\n  } else {\n    obj[path] = _process(v, mod)\n  }\n\n  return obj\n}\n\n/**\n *\n * Pick a value from an object using dot notation.\n *\n * Optionally remove the value\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Boolean} remove\n */\nDotObject.prototype.pick = function (path, obj, remove, reindexArray) {\n  var i\n  var keys\n  var val\n  var key\n  var cp\n\n  keys = parsePath(path, this.separator)\n  for (i = 0; i < keys.length; i++) {\n    key = parseKey(keys[i], obj)\n    if (obj && typeof obj === 'object' && key in obj) {\n      if (i === keys.length - 1) {\n        if (remove) {\n          val = obj[key]\n          if (reindexArray && Array.isArray(obj)) {\n            obj.splice(key, 1)\n          } else {\n            delete obj[key]\n          }\n          if (Array.isArray(obj)) {\n            cp = keys.slice(0, -1).join('.')\n            if (this.cleanup.indexOf(cp) === -1) {\n              this.cleanup.push(cp)\n            }\n          }\n          return val\n        } else {\n          return obj[key]\n        }\n      } else {\n        obj = obj[key]\n      }\n    } else {\n      return undefined\n    }\n  }\n  if (remove && Array.isArray(obj)) {\n    obj = obj.filter(function (n) {\n      return n !== undefined\n    })\n  }\n  return obj\n}\n/**\n *\n * Delete value from an object using dot notation.\n *\n * @param {String} path\n * @param {Object} obj\n * @return {any} The removed value\n */\nDotObject.prototype.delete = function (path, obj) {\n  return this.remove(path, obj, true)\n}\n\n/**\n *\n * Remove value from an object using dot notation.\n *\n * Will remove multiple items if path is an array.\n * In this case array indexes will be retained until all\n * removals have been processed.\n *\n * Use dot.delete() to automatically  re-index arrays.\n *\n * @param {String|Array<String>} path\n * @param {Object} obj\n * @param {Boolean} reindexArray\n * @return {any} The removed value\n */\nDotObject.prototype.remove = function (path, obj, reindexArray) {\n  var i\n\n  this.cleanup = []\n  if (Array.isArray(path)) {\n    for (i = 0; i < path.length; i++) {\n      this.pick(path[i], obj, true, reindexArray)\n    }\n    if (!reindexArray) {\n      this._cleanup(obj)\n    }\n    return obj\n  } else {\n    return this.pick(path, obj, true, reindexArray)\n  }\n}\n\nDotObject.prototype._cleanup = function (obj) {\n  var ret\n  var i\n  var keys\n  var root\n  if (this.cleanup.length) {\n    for (i = 0; i < this.cleanup.length; i++) {\n      keys = this.cleanup[i].split('.')\n      root = keys.splice(0, -1).join('.')\n      ret = root ? this.pick(root, obj) : obj\n      ret = ret[keys[0]].filter(function (v) {\n        return v !== undefined\n      })\n      this.set(this.cleanup[i], ret, obj)\n    }\n    this.cleanup = []\n  }\n}\n\n/**\n * Alias method  for `dot.remove`\n *\n * Note: this is not an alias for dot.delete()\n *\n * @param {String|Array<String>} path\n * @param {Object} obj\n * @param {Boolean} reindexArray\n * @return {any} The removed value\n */\nDotObject.prototype.del = DotObject.prototype.remove\n\n/**\n *\n * Move a property from one place to the other.\n *\n * If the source path does not exist (undefined)\n * the target property will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.move = function (source, target, obj, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(target, _process(this.pick(source, obj, true), mods), obj, merge)\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj, true), obj, merge)\n  }\n\n  return obj\n}\n\n/**\n *\n * Transfer a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.transfer = function (\n  source,\n  target,\n  obj1,\n  obj2,\n  mods,\n  merge\n) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(\n      target,\n      _process(this.pick(source, obj1, true), mods),\n      obj2,\n      merge\n    )\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, true), obj2, merge)\n  }\n\n  return obj2\n}\n\n/**\n *\n * Copy a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.copy = function (source, target, obj1, obj2, mods, merge) {\n  if (typeof mods === 'function' || Array.isArray(mods)) {\n    this.set(\n      target,\n      _process(\n        // clone what is picked\n        JSON.parse(JSON.stringify(this.pick(source, obj1, false))),\n        mods\n      ),\n      obj2,\n      merge\n    )\n  } else {\n    merge = mods\n    this.set(target, this.pick(source, obj1, false), obj2, merge)\n  }\n\n  return obj2\n}\n\n/**\n *\n * Set a property on an object using dot notation.\n *\n * @param {String} path\n * @param {any} val\n * @param {Object} obj\n * @param {Boolean} merge\n */\nDotObject.prototype.set = function (path, val, obj, merge) {\n  var i\n  var k\n  var keys\n  var key\n\n  // Do not operate if the value is undefined.\n  if (typeof val === 'undefined') {\n    return obj\n  }\n  keys = parsePath(path, this.separator)\n\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i]\n    if (i === keys.length - 1) {\n      if (merge && isObject(val) && isObject(obj[key])) {\n        for (k in val) {\n          if (hasOwnProperty.call(val, k)) {\n            obj[key][k] = val[k]\n          }\n        }\n      } else if (merge && Array.isArray(obj[key]) && Array.isArray(val)) {\n        for (var j = 0; j < val.length; j++) {\n          obj[keys[i]].push(val[j])\n        }\n      } else {\n        obj[key] = val\n      }\n    } else if (\n      // force the value to be an object\n      !hasOwnProperty.call(obj, key) ||\n      (!isObject(obj[key]) && !Array.isArray(obj[key]))\n    ) {\n      // initialize as array if next key is numeric\n      if (/^\\d+$/.test(keys[i + 1])) {\n        obj[key] = []\n      } else {\n        obj[key] = {}\n      }\n    }\n    obj = obj[key]\n  }\n  return obj\n}\n\n/**\n *\n * Transform an object\n *\n * Usage:\n *\n *   var obj = {\n *     \"id\": 1,\n *    \"some\": {\n *      \"thing\": \"else\"\n *    }\n *   }\n *\n *   var transform = {\n *     \"id\": \"nr\",\n *    \"some.thing\": \"name\"\n *   }\n *\n *   var tgt = dot.transform(transform, obj)\n *\n * @param {Object} recipe Transform recipe\n * @param {Object} obj Object to be transformed\n * @param {Array} mods modifiers for the target\n */\nDotObject.prototype.transform = function (recipe, obj, tgt) {\n  obj = obj || {}\n  tgt = tgt || {}\n  Object.keys(recipe).forEach(\n    function (key) {\n      this.set(recipe[key], this.pick(key, obj), tgt)\n    }.bind(this)\n  )\n  return tgt\n}\n\n/**\n *\n * Convert object to dotted-key/value pair\n *\n * Usage:\n *\n *   var tgt = dot.dot(obj)\n *\n *   or\n *\n *   var tgt = {}\n *   dot.dot(obj, tgt)\n *\n * @param {Object} obj source object\n * @param {Object} tgt target object\n * @param {Array} path path array (internal)\n */\nDotObject.prototype.dot = function (obj, tgt, path) {\n  tgt = tgt || {}\n  path = path || []\n  var isArray = Array.isArray(obj)\n\n  Object.keys(obj).forEach(\n    function (key) {\n      var index = isArray && this.useBrackets ? '[' + key + ']' : key\n      if (\n        isArrayOrObject(obj[key]) &&\n        ((isObject(obj[key]) && !isEmptyObject(obj[key])) ||\n          (Array.isArray(obj[key]) && !this.keepArray && obj[key].length !== 0))\n      ) {\n        if (isArray && this.useBrackets) {\n          var previousKey = path[path.length - 1] || ''\n          return this.dot(\n            obj[key],\n            tgt,\n            path.slice(0, -1).concat(previousKey + index)\n          )\n        } else {\n          return this.dot(obj[key], tgt, path.concat(index))\n        }\n      } else {\n        if (isArray && this.useBrackets) {\n          tgt[path.join(this.separator).concat('[' + key + ']')] = obj[key]\n        } else {\n          tgt[path.concat(index).join(this.separator)] = obj[key]\n        }\n      }\n    }.bind(this)\n  )\n  return tgt\n}\n\nDotObject.pick = wrap('pick')\nDotObject.move = wrap('move')\nDotObject.transfer = wrap('transfer')\nDotObject.transform = wrap('transform')\nDotObject.copy = wrap('copy')\nDotObject.object = wrap('object')\nDotObject.str = wrap('str')\nDotObject.set = wrap('set')\nDotObject.delete = wrap('delete')\nDotObject.del = DotObject.remove = wrap('remove')\nDotObject.dot = wrap('dot');\n['override', 'overwrite'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault.override\n    },\n    set: function (val) {\n      dotDefault.override = !!val\n    }\n  })\n});\n['useArray', 'keepArray', 'useBrackets'].forEach(function (prop) {\n  Object.defineProperty(DotObject, prop, {\n    get: function () {\n      return dotDefault[prop]\n    },\n    set: function (val) {\n      dotDefault[prop] = val\n    }\n  })\n})\n\nDotObject._process = _process\n\nmodule.exports = DotObject\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}