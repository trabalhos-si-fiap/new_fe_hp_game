{"ast":null,"code":"export const errorInterceptor = error => {\n  var _error$response;\n  if (error.message === 'Network Error') {\n    return Promise.reject(new Error('Erro de conexão.'));\n  }\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    //\n  }\n  return Promise.reject(error);\n};","map":{"version":3,"names":["errorInterceptor","error","_error$response","message","Promise","reject","Error","response","status"],"sources":["C:/Users/godoi/OneDrive/Documents/projetos-front-end/new_fe_hp_game/src/shared/services/api/axios-config/interceptors/ErrorInterceptors.ts"],"sourcesContent":["import { AxiosError } from 'axios';\r\n\r\nexport const errorInterceptor = (error: AxiosError) => {\r\n  if (error.message === 'Network Error') {\r\n    return Promise.reject(new Error('Erro de conexão.'));\r\n  }\r\n\r\n  if (error.response?.status === 401) {\r\n    //\r\n  }\r\n\r\n  return Promise.reject(error);\r\n};\r\n"],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAIC,KAAiB,IAAK;EAAA,IAAAC,eAAA;EACrD,IAAID,KAAK,CAACE,OAAO,KAAK,eAAe,EAAE;IACrC,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC;EACtD;EAEA,IAAI,EAAAJ,eAAA,GAAAD,KAAK,CAACM,QAAQ,cAAAL,eAAA,uBAAdA,eAAA,CAAgBM,MAAM,MAAK,GAAG,EAAE;IAClC;EAAA;EAGF,OAAOJ,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}