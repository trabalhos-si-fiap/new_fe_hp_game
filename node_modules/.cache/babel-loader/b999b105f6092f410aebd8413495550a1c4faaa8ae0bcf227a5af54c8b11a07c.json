{"ast":null,"code":"import { Api } from '../axios-config';\nconst authRequester = async (email, password) => {\n  try {\n    const urlRelativa = '/auth';\n    const {\n      data\n    } = await Api.get(urlRelativa);\n    if (data) {\n      return data;\n    }\n    return new Error('Erro ao obter token.');\n  } catch (error) {\n    console.error(error);\n    return new Error(error.message || 'Erro ao obter token.');\n  }\n};\nexport const AuthService = {\n  authRequester\n};","map":{"version":3,"names":["Api","authRequester","email","password","urlRelativa","data","get","Error","error","console","message","AuthService"],"sources":["C:/Users/godoi/OneDrive/Documents/projetos-front-end/new_fe_hp_game/src/shared/services/api/auth/AuthService.ts"],"sourcesContent":["import { Api } from '../axios-config';\r\n\r\ninterface IAuth {\r\n  token: string;\r\n}\r\n\r\nconst authRequester = async (\r\n  email: string,\r\n  password: string\r\n): Promise<IAuth | Error> => {\r\n  try {\r\n    const urlRelativa = '/auth';\r\n    const { data } = await Api.get(urlRelativa);\r\n\r\n    if (data) {\r\n      return data;\r\n    }\r\n\r\n    return new Error('Erro ao obter token.');\r\n  } catch (error) {\r\n    console.error(error);\r\n    return new Error(\r\n      (error as { message: string }).message || 'Erro ao obter token.'\r\n    );\r\n  }\r\n};\r\n\r\nexport const AuthService = {\r\n  authRequester,\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;AAMrC,MAAMC,aAAa,GAAG,MAAAA,CACpBC,KAAa,EACbC,QAAgB,KACW;EAC3B,IAAI;IACF,MAAMC,WAAW,GAAG,OAAO;IAC3B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,GAAG,CAACF,WAAW,CAAC;IAE3C,IAAIC,IAAI,EAAE;MACR,OAAOA,IAAI;IACb;IAEA,OAAO,IAAIE,KAAK,CAAC,sBAAsB,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAID,KAAK,CACbC,KAAK,CAAyBE,OAAO,IAAI,sBAC5C,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBV;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}